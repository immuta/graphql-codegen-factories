"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[538],{5318:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),g=a,h=d["".concat(s,".").concat(g)]||d[g]||p[g]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4260:function(e,t,n){n.r(t),n.d(t,{assets:function(){return b},contentTitle:function(){return m},default:function(){return w},frontMatter:function(){return f},metadata:function(){return v},toc:function(){return y}});var r=n(5773),a=n(808),o=n(7378),i=n(5318),l=n(6457),s=n(1309),c=n(8944),u="tabItem_WhCL";function p(e){var t,n,a,i=e.lazy,l=e.block,p=e.defaultValue,d=e.values,g=e.groupId,h=e.className,f=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),m=null!=d?d:f.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,s.lx)(m,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===p?p:null!=(t=null!=p?p:null==(n=f.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=f[0])?void 0:a.props.value;if(null!==b&&!m.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+m.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,s.UB)(),k=y.tabGroupChoices,w=y.setTabGroupChoices,T=(0,o.useState)(b),N=T[0],O=T[1],q=[],E=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var x=k[g];null!=x&&x!==N&&m.some((function(e){return e.value===x}))&&O(x)}var j=function(e){var t=e.currentTarget,n=q.indexOf(t),r=m[n].value;r!==N&&(E(t),O(r),null!=g&&w(g,r))},C=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=q.indexOf(e.currentTarget)+1;n=q[r]||q[0];break;case"ArrowLeft":var a=q.indexOf(e.currentTarget)-1;n=q[a]||q[q.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":l},h)},m.map((function(e){var t=e.value,n=e.label,a=e.attributes;return o.createElement("li",(0,r.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:function(e){return q.push(e)},onKeyDown:C,onFocus:j,onClick:j},a,{className:(0,c.Z)("tabs__item",u,null==a?void 0:a.className,{"tabs__item--active":N===t})}),null!=n?n:t)}))),i?(0,o.cloneElement)(f.filter((function(e){return e.props.value===N}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==N})}))))}function d(e){var t=(0,l.Z)();return o.createElement(p,(0,r.Z)({key:String(t)},e))}function g(e){var t=e.children,n=e.hidden,r=e.className;return o.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}var h=["components"],f={sidebar_position:2},m="Getting Started",v={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"Installation",source:"@site/docs/getting-started.mdx",sourceDirName:".",slug:"/getting-started",permalink:"/graphql-codegen-factories/getting-started",editUrl:"https://github.com/zhouzi/graphql-codegen-factories/blob/main/docs/docs/getting-started.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"default",previous:{title:"Introduction",permalink:"/graphql-codegen-factories/"},next:{title:"Schema",permalink:"/graphql-codegen-factories/configuration/schema"}},b={},y=[{value:"Installation",id:"installation",level:2},{value:"Schema",id:"schema",level:2},{value:"Operations",id:"operations",level:2}],k={toc:y};function w(e){var t=e.components,n=(0,a.Z)(e,h);return(0,i.kt)("wrapper",(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started"},"Getting Started"),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)(d,{mdxType:"Tabs"},(0,i.kt)(g,{label:"yarn",value:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"yarn add --dev graphql-codegen-factories\n"))),(0,i.kt)(g,{label:"npm",value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm install --save-dev graphql-codegen-factories\n")))),(0,i.kt)("p",null,"The package is split into two plugins:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"graphql-codegen-factories/schema"),": generates factories based on a GraphQL schema."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"graphql-codegen-factories/operations"),": generates factories based on GraphQL operations. The schema plugin is required for the operations plugin to work as it leverages the factories generated by the former.")),(0,i.kt)("h2",{id:"schema"},"Schema"),(0,i.kt)("p",null,"The factories generated by this plugin use the types generated by ",(0,i.kt)("a",{parentName:"p",href:"https://www.graphql-code-generator.com/plugins/typescript"},"@graphql-codegen/typescript")," so make sure it is installed.\nThe next step is to add ",(0,i.kt)("inlineCode",{parentName:"p"},"graphql-codegen-factories/schema")," to the list of plugins in your ",(0,i.kt)("inlineCode",{parentName:"p"},"codegen.yml")," configuration file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="codegen.yml"',title:'"codegen.yml"'},"overwrite: true\nschema: ./schema.graphql\ngenerates:\n  ./types.ts:\n    plugins:\n      - typescript\n      # highlight-start\n      - graphql-codegen-factories/schema\n      # highlight-end\n")),(0,i.kt)("p",null,"To access the full list of options, see the documentation for the ",(0,i.kt)("a",{parentName:"p",href:"/graphql-codegen-factories/configuration/schema"},"configuration"),"."),(0,i.kt)("h2",{id:"operations"},"Operations"),(0,i.kt)("p",null,"The factories generated by this plugin use the types generated by ",(0,i.kt)("a",{parentName:"p",href:"https://www.graphql-code-generator.com/plugins/typescript-operations"},"@graphql-codegen/typescript-operations")," so make sure it is installed.\nIt also leverages the factories generated by the schema plugin which must be installed as described above.\nThe next step is to add ",(0,i.kt)("inlineCode",{parentName:"p"},"graphql-codegen-factories/operations")," to the list of plugins in your ",(0,i.kt)("inlineCode",{parentName:"p"},"codegen.yml")," configuration file along with the path to the file with the factories."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="codegen.yml"',title:'"codegen.yml"'},"overwrite: true\nschema: ./schema.graphql\n# highlight-start\ndocuments: ./**/*.graphql\n# highlight-end\ngenerates:\n  ./types.ts:\n    plugins:\n      - typescript\n      - graphql-codegen-factories/schema\n  # highlight-start\n  ./operations.ts:\n    config:\n      schemaFactoriesPath: ./types.ts\n    plugins:\n      - typescript-operations\n      - graphql-codegen-factories/operations\n  # highlight-end\n")),(0,i.kt)("p",null,"To access the full list of options, see the documentation for the ",(0,i.kt)("a",{parentName:"p",href:"/graphql-codegen-factories/configuration/operations"},"configuration"),"."))}w.isMDXComponent=!0}}]);